//
//  PostTopic.m
//  AceBridge
//
//  Created by 军锋 安 on 12-9-4.
//  Copyright (c) 2012年 __MyCompanyName__. All rights reserved.
//

#import "PostTopic.h"
#import "PublicUtils.h"
#import "iToast.h"
@implementation PostTopic
@synthesize groupID;

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

- (void)didReceiveMemoryWarning
{
    // Releases the view if it doesn't have a superview.
    [super didReceiveMemoryWarning];
    
    // Release any cached data, images, etc that aren't in use.
}

#pragma mark - View lifecycle

- (void)viewDidLoad
{
    [self InitNavigationBarItems];
    [[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(keyboardWillShown:) name:UIKeyboardDidShowNotification object:nil];
    [[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(keyboardWillHiden:) name:UIKeyboardDidHideNotification object:nil];
    [titleView becomeFirstResponder];
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
}
- (void)InitNavigationBarItems
{
    UIImage *image = [UIImage imageNamed: @"titlebar.png"];   
    [image drawInRect:CGRectMake(0, 0, 320, 44)];
#ifdef AceBridge
    if ([self.navigationController.navigationBar respondsToSelector:@selector(setBackgroundImage:forBarMetrics:)])
    {       
        [self.navigationController.navigationBar setBackgroundImage:image forBarMetrics: UIBarMetricsDefault];
    }
#endif
    UIButton *button = [UIButton buttonWithType:UIButtonTypeCustom];
    [button setBackgroundImage:[UIImage imageNamed:@"BACK.png"] forState:UIControlStateNormal];
    //set the frame of the button to the size of the image (see note below)
    button.frame = CGRectMake(0, 0, 42, 42);  
    [button addTarget:self action:@selector(back) forControlEvents:UIControlEventTouchUpInside];
    //create a UIBarButtonItem with the button as a custom view
    UIBarButtonItem *customBarItem = [[UIBarButtonItem alloc] initWithCustomView:button];
    self.navigationItem.leftBarButtonItem = customBarItem;
    // Cleanup
    [customBarItem release];
    
    rbutton = [UIButton buttonWithType:UIButtonTypeCustom];
    
    [rbutton setBackgroundImage:[UIImage imageNamed:@"send.png"] forState:UIControlStateNormal];
    //set the frame of the button to the size of the image (see note below)
    rbutton.frame = CGRectMake(0, 0, 42, 42);
    [rbutton addTarget:self action:@selector(rClicked:) forControlEvents:UIControlEventTouchUpInside];
    //create a UIBarButtonItem with the button as a custom view
    UIBarButtonItem *rcustomBarItem = [[UIBarButtonItem alloc] initWithCustomView:rbutton];
    self.navigationItem.rightBarButtonItem = rcustomBarItem;
    // Cleanup
    [rcustomBarItem release];
}
-(void)back {
	[self.navigationController popViewControllerAnimated:YES];
}
-(IBAction)rClicked:(id)sender
{
    postBtn.enabled=NO;
    rbutton.enabled=NO;
   // [contextView resignFirstResponder];
    [titleView resignFirstResponder];
    NSLog(@"%d",groupID);
    
    
    if (weiboClient) {
        weiboClient.delegate = nil;
        [weiboClient release];
        weiboClient = nil;
    }
    weiboClient = [[WeiboClient alloc] initWithTarget:self 
                                               action:@selector(postTopic:obj:)];
    
    [weiboClient postTopic:groupID title:titleView.text content:@""];
    
}
-(void)postTopic:(WeiboClient*)sender obj:(NSObject*)obj{
    
    postBtn.enabled=YES;
    rbutton.enabled=YES;

    if (sender.hasError) {
		NSLog(@"failed!!!, error:%@, details:%@"
			  , sender.errorMessage, sender.errorDetail);
        if (sender.statusCode == 401) {
            AceBridgeAppDelegate *appDelegate = [AceBridgeAppDelegate getAppDelegate];
            [appDelegate openAuthenticateView];
        }
        [sender alert];
    }
	NSLog(@"%@",obj);
    NSDictionary* dic = (NSDictionary*)obj;
    int opresult = [[dic objectForKey:@"opResult"] intValue];
     int errCode = [[dic objectForKey:@"errCode"] intValue];
    if(opresult==1)
    {
        [[[iToast makeText:NSLocalizedString(@"Request sent.", @"")] setGravity:iToastGravityBottom] show];
        [self back];
    }
    else
    {
        if (errCode==40) {
            [[[iToast makeText:NSLocalizedString(@"You can only post topic after you join this group.", @"")] setGravity:iToastGravityBottom] show];
        }
        else{
            [[[iToast makeText:NSLocalizedString(@"Sorry, emotion is not supported at the moment.", @"")] setGravity:iToastGravityBottom] show];
        }
        
    }


}

- (void)textViewDidBeginEditing:(UITextView *)textView{
       defaultLbl.hidden=YES;

}
- (void)textViewDidEndEditing:(UITextView *)textView{

    if (![titleView.text length]>0) {
        defaultLbl.hidden=NO;
    }


}
- (void)viewDidUnload
{
    [super viewDidUnload];
    // Release any retained subviews of the main view.
    // e.g. self.myOutlet = nil;
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    // Return YES for supported orientations
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}
#pragma mark-键盘事件
- (void)keyboardWillShown:(NSNotification*)aNotification {
	NSDictionary* info = [aNotification userInfo];
    CGSize kbSize = [[info objectForKey:UIKeyboardFrameEndUserInfoKey] CGRectValue].size;
  
    titleView.frame=CGRectMake(10, 10, 300,116-180+416-kbSize.height-45+50);
    postBtn.frame =CGRectMake(35, 416 - kbSize.height-35, 250, 30);
}
- (void)keyboardWillHiden:(NSNotification*)aNotification
{
   
    titleView.frame=CGRectMake(10, 10, 300, 166);
    postBtn.frame =CGRectMake(35,190, 250, 30);
}

@end
