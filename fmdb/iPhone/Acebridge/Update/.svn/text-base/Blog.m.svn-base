//
//  Blog.m
//  AceBridge
//
//  Created by 军锋 安 on 12-5-4.
//  Copyright 2012年 __MyCompanyName__. All rights reserved.
//

#import "Blog.h"
#import "MBlogMin.h"
#import "BlogInfo.h"
#import "PublicUtils.h"
#import "TimeUtils.h"
@implementation Blog
@synthesize blogArray;
#pragma mark - 生命周期
- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

- (void)didReceiveMemoryWarning
{
    // Releases the view if it doesn't have a superview.
    [super didReceiveMemoryWarning];
    
    // Release any cached data, images, etc that aren't in use.
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    [self InitNavigationBarItems];
    imageCache=[ImageCache sharedCache];
    tableView = blogTableView;
    blogArray = [[NSMutableArray alloc] init];
    //添加缓存
    NSDictionary* dic = (NSDictionary*)[PublicUtils get:[NSString stringWithFormat:@"blog_list_%d.db",[PublicUtils getCurrentUser].userID]];
    if (dic!=nil) {
        NSArray* arr =(NSArray*)[dic objectForKey:@"blogArray"];
        for (int i=0; i<[arr count]; i++) {
        MBlogMin* mblogmin = [MBlogMin mblogminWithJsonDictionary:[arr objectAtIndex:i]];
        [blogArray addObject:mblogmin];
    }
}
    [self getItemsWhenPullDownTableView];
    // Do any additional setup after loading the view from its nib.
}

-(void) getBlogList:(int)pageNo
{
    if (weiboClient) { 
        weiboClient.delegate = nil;
        [weiboClient release];
        weiboClient = nil;
    }
    weiboClient = [[WeiboClient alloc] initWithTarget:self 
                                               action:@selector(blogList:obj:)];
    weiboClient.context = [[NSString alloc] initWithFormat:@"%d",pageNo];
    [weiboClient rblogs:0 pageNo:pageNo];
}
- (void)viewDidUnload
{
    [super viewDidUnload];
    // Release any retained subviews of the main view.
    // e.g. self.myOutlet = nil;
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    // Return YES for supported orientations
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}
#pragma mark - 返回按钮
- (void)InitNavigationBarItems
{
    UIImage *image = [UIImage imageNamed: @"titlebar.png"];   
    [image drawInRect:CGRectMake(0, 0, 320, 44)];
    //    if ([self.navigationController.navigationBar respondsToSelector:@selector(setBackgroundImage:forBarMetrics:)])
    //    {       
    //        [self.navigationController.navigationBar setBackgroundImage:image forBarMetrics: UIBarMetricsDefault];
    //    }
    UIButton *button = [UIButton buttonWithType:UIButtonTypeCustom];
    [button setBackgroundImage:[UIImage imageNamed:@"BACK.png"] forState:UIControlStateNormal];
    //set the frame of the button to the size of the image (see note below)
    button.frame = CGRectMake(0, 0, 42, 42.0);  
    [button addTarget:self action:@selector(back) forControlEvents:UIControlEventTouchUpInside];
    //create a UIBarButtonItem with the button as a custom view
    UIBarButtonItem *customBarItem = [[UIBarButtonItem alloc] initWithCustomView:button];
    self.navigationItem.leftBarButtonItem = customBarItem;
    // Cleanup
    [customBarItem release];
    
}
-(void)back {
	[self.navigationController popViewControllerAnimated:YES];
}
#pragma mark - tableview事件
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return [blogArray count]+1;
}
- (UITableViewCell *)tableView:(UITableView *)_tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if([blogArray count]==0)
    {
        return loadCell;
    }
    if(indexPath.row +1 <= [blogArray count])
    {
        static NSString *CellIdentifier = @"Cell";
        MBlogMin* min = (MBlogMin*) [blogArray objectAtIndex:indexPath.row];
        UITableViewCell *cell = [_tableView dequeueReusableCellWithIdentifier:CellIdentifier];
        if (cell == nil) {
            cell = [[[NSBundle mainBundle] loadNibNamed:@"ShareCell" owner:nil options:nil] objectAtIndex:10];
        } 
        UIImageView*imageview=(UIImageView*)[cell viewWithTag:1];
        [imageview setImage:[UIImage imageNamed:@"默认头像.png"]];
        if(min.blogCreatorId)
        {
            [self updateImageForCell:cell AtIndex:indexPath.row];
        }
        UILabel* labCreateName = (UILabel*)[cell viewWithTag:2];
        labCreateName.text = min.blogCreatorName;
        UILabel* labTime = (UILabel*)[cell viewWithTag:3];
        labTime.text = [TimeUtils timestamp:min.blogTime];
        UILabel* labName = (UILabel*)[cell viewWithTag:4];
        labName.text = min.blogName;
        
        
       
       
        UIFont* myfont1 = [UIFont fontWithName:@"Helvetica" size:12];
        CGSize textsize1 = [min.blogCreatorName sizeWithFont:myfont1 constrainedToSize:CGSizeMake(244, CGFLOAT_MAX) lineBreakMode:UILineBreakModeWordWrap];
        UILabel* postBlog = (UILabel*)[cell viewWithTag:100];
        postBlog.frame=CGRectMake(56+textsize1.width+4, 7,70, 15);
        
        
        
        UILabel* labText = (UILabel*)[cell viewWithTag:5];
        UIFont* myfont = [UIFont fontWithName:@"Helvetica" size:14];
        CGSize textsize = [min.blogAbstract sizeWithFont:myfont constrainedToSize:CGSizeMake(244, CGFLOAT_MAX) lineBreakMode:UILineBreakModeWordWrap];
        labText.numberOfLines = textsize.height/16+1;
        labText.frame=CGRectMake(56, 49, textsize.width, textsize.height);
        labText.text = min.blogAbstract;
        UILabel* labLike = (UILabel*)[cell viewWithTag:6];
        labLike.text = [NSString stringWithFormat:@"%d",min.likeCount];
        
        UILabel* labForward = (UILabel*)[cell viewWithTag:7];
        labForward.text = [NSString stringWithFormat:@"%d",min.shareCount];
        
        UILabel* labComment = (UILabel*)[cell viewWithTag:8];
        labComment.text = [NSString stringWithFormat:@"%d",min.commentCount];
        UIView* view = (UIView*)[cell viewWithTag:9];
        view.frame = CGRectMake(56, 65-15+textsize.height, 264, 25);
        // Configure the cell...
        return cell;
    }
    if((indexPath.row) %20 ==0)
    {
        if(!isLoading)
        {
            isLoading=true;
            [self getBlogList:[blogArray count]/20+1];
            return loadCell;
        }
    }
    return [[UITableViewCell alloc] init];
}
-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if([blogArray count]==0||[blogArray count]==indexPath.row)
    {
        if([blogArray count]%20!=0)
        {
            return 0;
        }
        return 44;
    }
    MBlogMin* min = (MBlogMin*) [blogArray objectAtIndex:indexPath.row];
    UIFont* myfont = [UIFont fontWithName:@"Helvetica" size:14];
    CGSize textsize = [min.blogAbstract sizeWithFont:myfont constrainedToSize:CGSizeMake(244, CGFLOAT_MAX) lineBreakMode:UILineBreakModeWordWrap];
    return 90-15+textsize.height;
}
- (void)tableView:(UITableView *)_tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [_tableView deselectRowAtIndexPath:indexPath animated:NO];
    UITableViewCell* cell = [_tableView cellForRowAtIndexPath:indexPath];
    if( [cell isKindOfClass:[LoadMoreCell class]])
    {
        return;
    }
    MBlogMin* blogmin = (MBlogMin*)[blogArray objectAtIndex:indexPath.row];
    BlogInfo* bloginfo = [[BlogInfo alloc] initWithNibName:@"BlogInfo" bundle:nil];
    [bloginfo setTitle:@"Blog"];
    bloginfo.blogID = blogmin.blogID;
    bloginfo.blogName = blogmin.blogName;
    [self.navigationController pushViewController:bloginfo animated:YES];
    [bloginfo release];
}
#pragma mark - 数据解析
- (void)blogList:(WeiboClient*)sender obj:(NSObject*)obj
{
    [self doneLoadingTableViewData];
    if (sender.hasError) {
		NSLog(@"获取career数据失败!!!, 错误:%@, 详细信息:%@"
			  , sender.errorMessage, sender.errorDetail);
        if (sender.statusCode == 401) {
            AceBridgeAppDelegate *appDelegate = [AceBridgeAppDelegate getAppDelegate];
            [appDelegate openAuthenticateView];
        }
        [sender alert];
        return;
    }
	NSLog(@"%@",obj);
    NSDictionary* dic = (NSDictionary*)obj;
    int opresult = [[dic objectForKey:@"opResult"] intValue];
    if(opresult==0)
    {
        [[[iToast makeText:NSLocalizedString(@"No data downloaded", @"")] setGravity:iToastGravityBottom] show];
        return;
    }
    NSArray* arr =(NSArray*)[dic objectForKey:@"blogArray"];
    if ([arr count]<1) {
        loadCell.hidden=YES;
    }
    int pageNo = [sender.context intValue];
    if(pageNo==1)
    {
        [blogArray removeAllObjects];
        [PublicUtils save:dic name:[NSString stringWithFormat:@"blog_list_%d.db",[PublicUtils getCurrentUser].userID]];

    }
    for (int i=0; i<[arr count]; i++) {
        MBlogMin* mblogmin = [MBlogMin mblogminWithJsonDictionary:[arr objectAtIndex:i]];
        [blogArray addObject:mblogmin];
    }
    [blogTableView reloadData];
    isLoading=NO;
}
#pragma mark - 下载图片
- (void)updateImageForCell:(UITableViewCell*)cell AtIndex:(int)index
{
    NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];
    MBlogMin *pItem =(MBlogMin*) [blogArray objectAtIndex:index];
    NSString *path = [NSString stringWithFormat:@"%@/data/%d/%d_medium.jpg",IMAGE_PATH,pItem.blogCreatorId,pItem.blogCreatorId];
    NSData *data=nil;
    if([imageCache hasImageForURL:path]) 
    {
        data=[imageCache imageDataForURL:path] ;
        if(data!=nil)
        {
            UIImage *image = [[UIImage alloc] initWithData:data];

            UIImageView*imageview=(UIImageView*)[cell viewWithTag:1];
            [imageview setImage:image];
        }
    }
    else
    {
        dispatch_async(dispatch_get_global_queue(0, 0), ^{     
            NSURL *url = [NSURL URLWithString:path];
            NSLog(@"%@",path);
            NSData *data = [NSData dataWithContentsOfURL:url];
            dispatch_async(dispatch_get_main_queue(), ^{
                if(data!=nil)
                {
                    [imageCache storeData:data forURL:path];
                    UIImage *image = [[UIImage alloc] initWithData:data];

                    UIImageView*imageview=(UIImageView*)[cell viewWithTag:1];
                    [imageview setImage:image];
                }
            });
        });  
    }
    [pool release];
}
-(void) dealloc
{
    [weiboClient release];
    [super dealloc];
}
-(void)getItemsWhenPullDownTableView
{
     loadCell.hidden=NO;
    [self getBlogList:1];
}

@end
