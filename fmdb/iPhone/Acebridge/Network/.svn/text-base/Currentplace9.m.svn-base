//
//  Currentplace9.m
//  AceBridge
//
//  Created by unitrue.com unitrue on 12-4-12.
//  Copyright 2012年 __MyCompanyName__. All rights reserved.
//

#import "Currentplace9.h"
#import "MUser.h"
#import "AceBridgeAppDelegate.h"
#import "UIImageExtras.h"
#import "UserInfo.h"

@implementation Currentplace9
@synthesize userArray;

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}
#pragma mark - 切换事件
- (IBAction)composeButtonTouch:(id)sender {
	[[AceBridgeAppDelegate getAppDelegate] showChatColum:2 withObject:nil];
}

#pragma mark - View 生命周期

- (void)viewDidLoad
{
    [super viewDidLoad];
    if(userArray==nil)
    {
        userArray = [[NSMutableArray alloc] init];
    }
    [self initNavigation];
    imageCache=[ImageCache sharedCache];
    //提示泡泡
    //[self navigationController].tabBarItem.badgeValue = [NSString stringWithFormat:@"%d", 10];
    tableView = cpTableView;
    tableView.delegate=self;
    tableView.dataSource = self;
    tableView.frame = CGRectMake(0, 0, 320, 367);
    isLoading = NO;
    [self getItemsWhenPullDownTableView];
    // Do any additional setup after loading the view from its nib.
}
- (void)didReceiveMemoryWarning
{
    // Releases the view if it doesn't have a superview.
    [super didReceiveMemoryWarning];
    
    // Release any cached data, images, etc that aren't in use.
}
- (void)viewDidUnload
{
    [super viewDidUnload];
    // Release any retained subviews of the main view.
    // e.g. self.myOutlet = nil;
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    // Return YES for supported orientations
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}
#pragma mark - 初始化导航栏点击事件
-(void)initNavigation{
    //发送微博按钮
    UIButton *rightButton = [UIButton buttonWithType:UIButtonTypeCustom];
    [rightButton setBackgroundImage:[UIImage imageNamed:@"search.png"] forState:UIControlStateNormal];
    //set the frame of the button to the size of the image (see note below)
    rightButton.frame = CGRectMake(0, 0, 42, 42);
    [rightButton addTarget:self action:@selector(touchUpInside) forControlEvents:UIControlEventTouchUpInside];
    //create a UIBarButtonItem with the button as a custom view
    UIBarButtonItem *customBar = [[UIBarButtonItem alloc] initWithCustomView:rightButton];
    self.navigationItem.rightBarButtonItem = customBar;
    // Cleanup
    [customBar release];
    
    //切换列表按钮
    UIButton *button = [UIButton buttonWithType:UIButtonTypeCustom];
    [button setBackgroundImage:[UIImage imageNamed:@"列表.png"] forState:UIControlStateNormal];
    //set the frame of the button to the size of the image (see note below)
    button.frame = CGRectMake(0, 0, 42, 42);
    [button addTarget:self action:@selector(leftClicked:) forControlEvents:UIControlEventTouchUpInside];
    //create a UIBarButtonItem with the button as a custom view
    UIBarButtonItem *customBarItem = [[UIBarButtonItem alloc] initWithCustomView:button];
    self.navigationItem.leftBarButtonItem = customBarItem;
    // Cleanup
    [customBarItem release];
    UIView*titleView=[[UIView alloc]initWithFrame: CGRectMake(0, 0, 200, 40)];
//    UIButton* titleBtn = [[UIButton alloc] initWithFrame:CGRectMake(0, 2, 200, 35)];
//    [titleBtn setImage:[UIImage imageNamed:@"button01.png"] forState:UIControlStateNormal];
//    [titleBtn setImage:[UIImage imageNamed:@"button01.png"] forState:UIControlStateSelected];
//    [titleBtn addTarget:self action:@selector(touchUpInside) forControlEvents:UIControlEventTouchUpInside];
    
    UILabel* labTitle = [[UILabel alloc] initWithFrame:CGRectMake(0, 3, 200, 30)];
    labTitle.text =@"Current Place";
    labTitle.backgroundColor=[UIColor clearColor];
    labTitle.font = [UIFont fontWithName:@"Helvetica-Bold" size:16];
    labTitle.textColor = [UIColor whiteColor];
    labTitle.textAlignment = UITextAlignmentCenter;
//    [titleBtn addSubview:labTitle];
//    [titleView addSubview:titleBtn];
    
    
//    UIButton* titlebtn= [UIButton buttonWithType:UIButtonTypeCustom];
//    [titlebtn setFrame:CGRectMake(160, 8, 28, 28)];
//    [titlebtn setImage:[UIImage imageNamed:@"展开.png"] forState:UIControlStateNormal];
//    [titlebtn setSelected:NO];
//    titlebtn.tag=1;
//    [titleView addSubview:titlebtn];
    [titleView addSubview:labTitle];
    self.navigationItem.titleView = titleView;
    
    
    //设置选择界面
    UIView*view = [[[NSBundle mainBundle] loadNibNamed:@"showView" owner:nil options:nil] objectAtIndex:0];
    for (int i=1; i<5; i++) {
        // [[view viewWithTag:i].class isSubclassOfClass:[UIButton class]];
        UIButton*btn=(UIButton*)[view viewWithTag:i];
        [btn setSelected:NO];
        [btn addTarget:self action:@selector(changeChannel:) forControlEvents:(UIControlEventTouchUpInside)];
        
    }
    view.frame=CGRectMake(105, -2, 200, 130);
    [view setHidden:YES];
    view.tag=10000;
    [self.view addSubview:view];
}
- (void)changeChannel:(id)sender {
    UIImageView*view=(UIImageView*)[self.view viewWithTag:10000];
    [view setHidden:YES];
   // UIButton* btn=(UIButton*) [view viewWithTag:1];
    UIButton* titlebtn=(UIButton*)(UIButton*)self.navigationItem.rightBarButtonItem.customView;
    if (!titlebtn.isSelected) {
        //[titlebtn setImage:[UIImage imageNamed:@"展开.png"] forState:UIControlStateSelected];
        titlebtn.selected=YES;
    }
    else{
       // [titlebtn setImage:[UIImage imageNamed:@"收起.png"] forState:UIControlStateNormal];
        titlebtn.selected=NO;
    }
    [[AceBridgeAppDelegate getAppDelegate] showChatColum:((UIButton*)sender).tag-1 withObject:nil];
}
#pragma mark - 切换界面
-(void)touchUpInside{
    UIImageView*view=(UIImageView*)[self.view viewWithTag:10000];
    UIImageView *focus=(UIImageView*)[view viewWithTag:10];
    focus.frame=CGRectMake(170, 17, 24, 24);
    [view addSubview:focus];
    //UIButton* titlebtn=(UIButton*) [self.navigationItem.titleView viewWithTag:1];
    
    UIButton*titlebtn=(UIButton*)self.navigationItem.rightBarButtonItem.customView;
    
    if (!titlebtn.isSelected) {
        
       // [titlebtn setImage:[UIImage imageNamed:@"收起.png"] forState:UIControlStateSelected];
        [titlebtn setSelected:YES];
        UIImageView*view=(UIImageView*)[self.view viewWithTag:10000];
        [view setHidden:NO]; 
    }
    else{
      //  [titlebtn setImage:[UIImage imageNamed:@"展开.png"] forState:UIControlStateNormal];
        [titlebtn setSelected:NO];
        UIImageView*view=(UIImageView*)[self.view viewWithTag:10000];
        [view setHidden:YES];
    }
}


#pragma mark-切换九宫格
-(IBAction)leftClicked:(id)sender
{
    [[AceBridgeAppDelegate getAppDelegate] showChatColum:0 withObject:userArray];
}
#pragma mark - tableview 事件
- (NSIndexPath *)tableView:(UITableView *)tableView willSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    return nil;
}
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
	return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return ([userArray count]+3)/4+1;
}
-(CGFloat)tableView:(UITableView *)_tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if([userArray count]==0)
    {
        return 44;
    }
    if(([userArray count]+3)/4==indexPath.row&&[userArray count]%4!=0)
    {
        return 0;
    }
    return 82;
}
- (UITableViewCell *)tableView:(UITableView *)_tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath 
{
    if([userArray count]==0)
    {
        return loadCell;
    }
    if(indexPath.row +1 <= ([userArray count]+3)/4)
    {
        UITableViewCell* pcell = [[UITableViewCell alloc] initWithFrame:CGRectMake(0, 0, 320,82)];
        int count =[userArray count] - (indexPath.row+1)*4;
        if(count<0)
        {
            count+=4;
        }
        else
        {
            count=4;
        }
        int btnWidth = 3;
        
        for (int i=0;i<count; i++) {
            if(i!=0)
            {
                btnWidth+=79;
            }
            MUser* user = (MUser*)[userArray objectAtIndex:((indexPath.row)*4+i)];
            UIButton* btnUser=[[UIButton alloc] initWithFrame:CGRectMake(btnWidth, 3, 76, 76)];
            [btnUser setImage:[UIImage imageNamed:@"默认头像.png"] forState:UIControlStateNormal];
            if([user.avatarName length]>0)
            {
                [self updateImage:btnUser imageName:user.avatarName];
            }
            [btnUser setTag:((indexPath.row)*4+i)];
            [btnUser addTarget:self action:@selector(userClicked:) forControlEvents:UIControlEventTouchUpInside];
            UIView* viewUser = [[UIView alloc] initWithFrame:CGRectMake(0, 56, 76, 20)];
            [viewUser setBackgroundColor:[UIColor blackColor]];
            [viewUser setAlpha:0.6];
            
            UILabel* lab = [[UILabel alloc] initWithFrame:CGRectMake(2, 5, 60, 15)];
            lab.text = [NSString stringWithFormat:@"%.2fkm",user.distance];
            lab.textColor = [UIColor whiteColor];
            lab.backgroundColor = [UIColor clearColor];

            lab.font = [UIFont systemFontOfSize:12];

            [viewUser addSubview:lab];
            [lab release];
            UIImageView* userGender = [[UIImageView alloc] init];
            if(user.gender)
            {
                [userGender setImage:[UIImage imageNamed:@"male2.png"]];
            }
            else
            {
                [userGender setImage:[UIImage imageNamed:@"female2.png"]];
            }
            [userGender setFrame:CGRectMake(60, 5, 15, 15)];
            userGender.backgroundColor = [UIColor clearColor];
            [viewUser addSubview:userGender];
            [userGender release];
            [btnUser addSubview:viewUser];
            [pcell addSubview:btnUser];
            [viewUser release];
            [btnUser release];
        }
        return pcell;   
        
	}
    if([userArray count]%20 ==0)
    {
        if(!isLoading)
        {
            isLoading=true;
            [self getCPDate:[userArray count]/20+1];
            return loadCell;
        }
    }
    return [[UITableViewCell alloc] init];
}
- (void)tableView:(UITableView *)_tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [_tableView deselectRowAtIndexPath:indexPath animated:NO];
}

#pragma mark - 点击事件
-(IBAction)userClicked:(id)sender
{
    UIButton* btnUser = (UIButton*)sender;
    UserInfo* userInfo = [[UserInfo alloc] initWithNibName:@"UserInfo" bundle:nil];
    MUser* user = (MUser*)[userArray objectAtIndex:btnUser.tag];
    userInfo.userID=user.userID;
    [userInfo setTitle:user.userName];
    userInfo.hidesBottomBarWhenPushed=YES;
    [self.navigationController pushViewController:userInfo animated:YES];
    [userInfo release];
}
#pragma mark - 下载图片
- (void)updateImage:(UIButton*)userbtn imageName:(NSString*) imageName
{
    NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];
    NSString *path = [NSString stringWithFormat:@"%@/data/%@/%@_medium.jpg",IMAGE_PATH,imageName,imageName];
    NSData *data=nil;
    if([imageCache hasImageForURL:path]) 
    {
        data=[imageCache imageDataForURL:path] ;
        if(data!=nil)
        {
            UIImage *image = [[UIImage alloc] initWithData:data];

            [userbtn setImage:image forState:UIControlStateNormal];
        }
    }
    else
    {
        dispatch_async(dispatch_get_global_queue(0, 0), ^{     
            NSURL *url = [NSURL URLWithString:path];
            NSLog(@"%@",path);
            NSData *data = [NSData dataWithContentsOfURL:url];
            dispatch_async(dispatch_get_main_queue(), ^{
                if(data!=nil)
                {
                    [imageCache storeData:data forURL:path];
                    UIImage *image = [[UIImage alloc] initWithData:data];

                    [userbtn setImage:image forState:UIControlStateNormal];
                }
            });
        });  
    }
    [pool release];
}
-(void)getItemsWhenPullDownTableView
{
    loadCell.hidden=NO;
    [self loadData];
}
#pragma mark - 初始化数据
-(void) loadData
{
    locationManager=[[CLLocationManager alloc] init];
    locationManager.delegate = self;
    locationManager.desiredAccuracy = kCLLocationAccuracyBest;
    locationManager.distanceFilter=30.0f;
    [locationManager startUpdatingLocation];
    imageCache=[ImageCache sharedCache];
}
#pragma mark - 获取用户当前位置
-(void) locationManager:(CLLocationManager *)manager didUpdateToLocation:(CLLocation *)newLocation fromLocation:(CLLocation *)oldLocation
{
    checkinLocation = newLocation;
    CLLocationCoordinate2D loc = [newLocation coordinate];
    latitude = loc.latitude;
    longitude = loc.longitude;
    NSLog(@"%f,%f",loc.latitude,loc.longitude);
    [locationManager stopUpdatingLocation];
    [manager stopUpdatingLocation];
    [self getCPDate:1];
}
-(void) locationManager:(CLLocationManager *)manager didFailWithError:(NSError *)error
{
    [self doneLoadingTableViewData];
    [locationManager stopUpdatingLocation];
    [manager stopUpdatingLocation];
    NSLog(@"---定位错误---%@",error);
     [[[iToast makeText:NSLocalizedString(@"Fail to download GPS data.", @"")] setGravity:iToastGravityBottom] show];
}
-(void)getCPDate:(int)pageNo
{
    if (weiboClient) { 
        weiboClient.delegate = nil;
        [weiboClient release];
        weiboClient = nil;
    }
    weiboClient = [[WeiboClient alloc] initWithTarget:self 
                                               action:@selector(nearbyusers:obj:)];
    weiboClient.context = [[NSString alloc] initWithFormat:@"%d",pageNo];
    int sexvalue = [[PublicUtils get:@"sexselect.db"] intValue];
    int timevalue = [[PublicUtils get:@"dayselect.db"] intValue];
    if(latitude==0||longitude==0)
    {
        return;
    }
    [weiboClient nearbyusers:timevalue gender:sexvalue industryID:0 sublndustryID:0 distance:1000000000 pageNo:pageNo longitude:longitude latitude:latitude];
}
- (void)nearbyusers:(WeiboClient*)sender obj:(NSObject*)obj
{
    [self doneLoadingTableViewData];
    if (sender.hasError) {
		NSLog(@"获取用户信息失败!!!, 错误:%@, 详细信息:%@"
			  , sender.errorMessage, sender.errorDetail);
        if (sender.statusCode == 401) {
            AceBridgeAppDelegate *appDelegate = [AceBridgeAppDelegate getAppDelegate];
            [appDelegate openAuthenticateView];
        }
        [sender alert];
    }
    NSDictionary* dic = (NSDictionary*)obj;
    int opresult = [[dic objectForKey:@"opResult"] intValue];
    if(opresult==0)
    {
        [[[iToast makeText:NSLocalizedString(@"No data downloaded", @"")] setGravity:iToastGravityBottom] show];
        return;
    }
    NSArray* arr =(NSArray*)[dic objectForKey:@"userArray"];
    int pageNo = [sender.context intValue];
    if(pageNo==1)
    {
        [userArray removeAllObjects];
        [PublicUtils saveCPList:dic];
    }
    for (int i=0; i<[arr count]; i++) {
        MUser* user = [MUser muserWithJsonDictionary:[arr objectAtIndex:i]];
        [userArray addObject:user];
    }
    int userCount = [userArray count];
    if(userCount==0)
    {
        [[[iToast makeText:NSLocalizedString(@"No data available", @"")] setGravity:iToastGravityBottom] show];
        loadCell.hidden=YES;
        return;
    }
    [tableView reloadData];
    isLoading=NO;
}
-(void) dealloc
{
    [weiboClient release];
    [userArray release];
    [super dealloc];
}
@end